on:
  push:
    branches:
      - main

name: Render and Publish

permissions:
    contents: write
    pages: write

env:
  RENV_PATHS_ROOT: ~/.local/share/renv

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          # To install LaTeX to build PDF book 
          tinytex: true 
          # uncomment below and fill to pin a version
          # version: SPECIFIC-QUARTO-VERSION-HERE

      # From https://github.com/r-lib/actions/tree/v2-branch/setup-r
      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Set up renv
        uses: r-lib/actions/setup-renv@v2

      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
            # restore-keys: |
            #   ${{ runner.os }}-renv-

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()

      # Custom action to render both profiles - testing in progress
      #- name: 'Render both profiles'
      #  env:
      #    QUARTO_PRINT_STACK: true
      #  run: |
      #    if [ "${{ inputs.to }}" == "" ]; then
      #      quarto render --profile lt ${{ inputs.path }}
      #      quarto render --profile en ${{ inputs.path }}
      #    else
      #      quarto render --profile lt ${{ inputs.path }} --to ${{ inputs.to }}
      #      quarto render --profile en ${{ inputs.path }} --to ${{ inputs.to }}
      #    fi
      #    if [ -f "_book" ]; then
      #      echo "QUARTO_OUTPUT=_book" >> $GITHUB_ENV
      #    elif [ -f "_site" ]; then
      #      echo "QUARTO_OUTPUT=_site" >> $GITHUB_ENV
      #    fi
      #  shell: bash

      - name: 'Publish'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is always available for github actions
          QUARTO_PRINT_STACK: true
          CONNECT_SERVER: ${{ inputs.CONNECT_SERVER }}
          CONNECT_API_KEY: ${{ inputs.CONNECT_API_KEY }}
          NETLIFY_AUTH_TOKEN: ${{ inputs.NETLIFY_AUTH_TOKEN }}
          QUARTO_PUB_AUTH_TOKEN: ${{ inputs.QUARTO_PUB_AUTH_TOKEN }}
        run: |
          git config --global user.email "${{ inputs.GITHUB_EMAIL }}"
          git config --global user.name "${{ inputs.GITHUB_USERNAME }}"
          quarto publish gh-pages/en --profile en --no-browser
          quarto publish gh-pages/lt --profile lt --no-browser
        #TARGET="${{ inputs.to }}"
        #if [ "$TARGET" == "" ]; then
        #  TARGET="${{ inputs.target }}"
        #fi
        #if [ "${{ inputs.render }}" != "true" ]; then
        #  quarto publish $TARGET ${{ inputs.path }} --no-render --no-browser
        #else
        #  quarto publish $TARGET ${{ inputs.path }} --no-browser
        #fi
      # NOTE: If Publishing to GitHub Pages, set the permissions correctly (see top of this yaml)
      #- name: Publish to GitHub Pages
      #  uses: quarto-dev/quarto-actions/publish@v2
      #  with:
      #    target: gh-pages
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is always available for github actions
