Publishing this site:

The site is publishing using Github pages, from the main branch "docs" directory. 
This is necessary to control the way the profiles (languages) are rendered. 
You can rendering the full site locally on your machine and push to Github, however this can be difficult and RStudio will often get stuck. 
Therefore, the project is set up to ignore any locally rendered files (with docs/ in .gitignore) and instead has a workflow set up to render on the repo end when you push to the main branch. 
This way, you can fork to a secondary branch and your changes will only publish to the live site when you merge with the main branch.

Repository settings: 	
	1. Under Pages -> Build and deployment, set Source = Deploy from a branch and branch = main -> docs/ (must exist)
	2. Set Custom domain to the desired domain or subdomain name, and check the Enforce HTTPS box.
			
DNS settings: 	
	1. Add the 4 "A" records pointing to github (values are here: https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#dns-records-for-your-custom-domain)
	2. Add a CNAME record pointing to the correct repo name (<name>.github.io)
	
Project files:
	1. In the main branch root directory (NOT docs) add a file called CNAME with the correct domain/subdomain.
	2. Within the project yaml file, optionally add:
		website:
			site-url: https://<domain/subdomain> 
			repo-url: https://github.com/<account>/<name>.github.io
		
Process for automatic live publishing on push to main:

Repository settings: 	
	1. Under Actions -> General -> Actions permissions, set to "Allow all actions and reusable workflows"

The publishing process is already set up. The action is detailed in the file ./github/workflows/publish.yml and should not need to be changed unless new profiles (ie languages) are added, in which case the process should be self-explanatory.